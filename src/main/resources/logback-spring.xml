<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--设置存储路径变量-->
    <property name="LOG_HOME" value="/root/jnxaread-server-api/logs"/>

    <!--控制台输出appender-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--设置输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <!--设置编码-->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--文件输出,时间窗口滚动-->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志名,指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/info/jnxaread.log</File>
        <!--输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <!--设置编码-->
            <charset>UTF-8</charset>
        </encoder>
        <!--文件滚动模式-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名,可设置文件类型为gz,开启文件压缩-->
            <!-- %d{yyyy-MM,aux}，aux为目录辅助标识；%i表示当前为当天第i个日志 -->
            <FileNamePattern>${LOG_HOME}/info/%d{yyyy-MM,aux}/jnxaread.%d{yyyy-MM-dd}.%i.log.gz</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!--按大小分割同一天的-->
            <maxFileSize>8MB</maxFileSize>
        </rollingPolicy>
    </appender>

    <!-- 文件 滚动日志 (仅error)-->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 当前日志输出路径、文件名 -->
        <file>${LOG_HOME}/error/jnxaread-error.log</file>
        <!--日志输出格式-->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <!--历史日志归档策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 历史日志： 归档文件名 -->
            <fileNamePattern>${LOG_HOME}/error/%d{yyyy-MM,aux}/jnxaread-error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!--单个文件的最大大小-->
            <maxFileSize>8MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>90</maxHistory>
        </rollingPolicy>

        <!-- 此日志文档只记录error级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 用户访问记录日志输出 -->
    <appender name="ACCESS_NATURAL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志名,指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/access/natural/access.log</File>
        <!--输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %msg%n</pattern>
            <!--设置编码-->
            <charset>UTF-8</charset>
        </encoder>
        <!--文件滚动模式-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名,可设置文件类型为gz,开启文件压缩-->
            <!-- %d{yyyy-MM,aux}，aux为目录辅助标识；%i表示当前为当天第i个日志 -->
            <FileNamePattern>${LOG_HOME}/access/natural/%d{yyyy-MM,aux}/access.%d{yyyy-MM-dd}.%i.log.gz
            </FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>90</MaxHistory>
            <!--按大小分割同一天的-->
            <maxFileSize>8MB</maxFileSize>
        </rollingPolicy>
    </appender>

    <!-- 用户访问记录日志输出(仅恶意IP) -->
    <appender name="ACCESS_VICIOUS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志名,指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/access/vicious/vicious_ip.log</File>
        <!--输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %msg%n</pattern>
            <!--设置编码-->
            <charset>UTF-8</charset>
        </encoder>
        <!--文件滚动模式-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名,可设置文件类型为gz,开启文件压缩-->
            <!-- %d{yyyy-MM,aux}，aux为目录辅助标识；%i表示当前为当天第i个日志 -->
            <FileNamePattern>${LOG_HOME}/access/vicious/%d{yyyy-MM,aux}/vicious_ip.%d{yyyy-MM-dd}.%i.log.gz
            </FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>90</MaxHistory>
            <!--按大小分割同一天的-->
            <maxFileSize>8MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文档只记录error级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 用户访问记录日志输出(仅受限IP) -->
    <appender name="ACCESS_LIMITED" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志名,指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/access/limited/limited_ip.log</File>
        <!--输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %msg%n</pattern>
            <!--设置编码-->
            <charset>UTF-8</charset>
        </encoder>
        <!--文件滚动模式-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名,可设置文件类型为gz,开启文件压缩-->
            <!-- %d{yyyy-MM,aux}，aux为目录辅助标识；%i表示当前为当天第i个日志 -->
            <FileNamePattern>${LOG_HOME}/access/limited/%d{yyyy-MM,aux}/limited_ip.%d{yyyy-MM-dd}.%i.log.gz
            </FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>90</MaxHistory>
            <!--按大小分割同一天的-->
            <maxFileSize>8MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文档只记录warn级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 用户登录记录日志输出 -->
    <appender name="LOGIN_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志名,指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/login/login.log</File>
        <!--输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %msg%n</pattern>
            <!--设置编码-->
            <charset>UTF-8</charset>
        </encoder>
        <!--文件滚动模式-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名,可设置文件类型为gz,开启文件压缩-->
            <!-- %d{yyyy-MM,aux}，aux为目录辅助标识；%i表示当前为当天第i个日志 -->
            <FileNamePattern>${LOG_HOME}/login/%d{yyyy-MM,aux}/login.%d{yyyy-MM-dd}.%i.log.gz</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>90</MaxHistory>
            <!--按大小分割同一天的-->
            <maxFileSize>8MB</maxFileSize>
        </rollingPolicy>
    </appender>

    <!-- 用户访问logger -->
    <logger name="access" level="INFO" additivity="false">
        <appender-ref ref="ACCESS_NATURAL"/>
        <appender-ref ref="ACCESS_VICIOUS"/>
        <appender-ref ref="ACCESS_LIMITED"/>
    </logger>

    <!-- 用户登录logger -->
    <logger name="login" level="INFO" additivity="false">
        <appender-ref ref="LOGIN_LOG"/>
    </logger>

    <!--指定基础的日志输出级别-->
    <root level="INFO">
        <!--appender将会添加到这个logger-->
        <appender-ref ref="console"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>
</configuration>